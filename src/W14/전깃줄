import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.StringTokenizer;

class Main {
    static int[] dp;
    
    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        int N = Integer.parseInt(br.readLine());
        int[] connection = new int[500];
        int start = 500;
        int end = 0;
        for(int i=0; i < N; i++) {
            StringTokenizer st = new StringTokenizer(br.readLine());
            int from = Integer.parseInt(st.nextToken()) - 1;
            int to = Integer.parseInt(st.nextToken());
            connection[from] = to;
            if(from < start) start = from;
            if(from > end) end = from;
        }
        dp = new int[end - start + 1];
        dp[0] = connection[start];
        int idx = 1;

        for(int i=start + 1; i < end + 1; i++) {
            if(connection[i] != 0) {
                if(connection[i] > dp[idx - 1]) dp[idx++] = connection[i];
                else dp[binarySearch(connection[i], idx)] = connection[i];
            }
        }

        System.out.println(N - idx);
    }

    static int binarySearch(int target, int idx) {
        int left = 0;
        int right = idx - 1;
        while(left < right) {
            int mid = (left + right) >> 1;
            if(dp[mid] >= target) right = mid;
            else left = mid + 1;
        }
        return right;
    }
}
